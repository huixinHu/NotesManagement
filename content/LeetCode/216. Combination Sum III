# 216. Combination Sum III
Find all possible combinations of k numbers that add up to a number n, given that only numbers from 1 to 9 can be used and each combination should be a unique set of numbers.


**Example 1:**

Input: k = 3, n = 7

Output: [[1,2,4]]

**Example 2:**

Input: k = 3, n = 9

Output:
[[1,2,6], [1,3,5], [2,3,4]]

这道题跟之前两道Combination Sum系列的题有点不太一样。从1~9这九个数字中挑选k个不重复的数，使得它们的和等于n。但本质上还是差不多的。
```cpp
vector<vector<int>> combinationSum3(int k, int n) {
    if (k > 9 || n < k*(k+1)/2 || n > (9-k + 1 + 9)*k/2) return{}; //（首项+末项）*项数/2
    vector<vector<int>> rs;
    vector<int> resItem;
    cs3dfs(rs,resItem,1,k,n);
    return rs;
}
void cs3dfs(vector<vector<int>> &res ,vector<int> &resItem ,int index , int k ,int n){
    if (n == 0 && resItem.size() == k) {res.push_back(resItem); return;}
    if (n < index) return;
    if (resItem.size() < k){
        for (int i = index ;i <= 9 ; ++i){
            resItem.push_back(i);
            cs3dfs(res,resItem,i+1,k,n-i);
            resItem.pop_back();
        }
    }
}
```
